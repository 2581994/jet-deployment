apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jet-external-services.fullname" . }}
  labels:
    {{- include "jet-external-services.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "jet-external-services.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jet-external-services.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: byzanteam/postgres-zhparser-alpine:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: postgres-persistent-storage
              mountPath: /var/lib/postgresql/data/
        - name: minio
          image: minio/minio:RELEASE.2022-03-24T00-43-44Z
          imagePullPolicy: IfNotPresent
          command: ["minio", "server", "/data"]
          env:
            - name: MINIO_ROOT_USER
              value: minioadmin
            - name: MINIO_ROOT_PASSWORD
              value: minioadmin
            - name: MINIO_BROWSER
              value: "off"
          ports:
            - containerPort: 9000
              protocol: TCP
          volumeMounts:
            - name: minio-persistent-storage
              mountPath: /data
      volumes:
        - name: postgres-persistent-storage
          hostPath:
            path: {{ include "jet-external-services.build-volume-path" (merge (dict "storageName" "postgres") $) }}
            type: DirectoryOrCreate
        - name: minio-persistent-storage
          hostPath:
            path: {{ include "jet-external-services.build-volume-path" (merge (dict "storageName" "minio/data") $) }}
            type: DirectoryOrCreate
